{
  "Resources": {
    "ExampleTable114D508F": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "KeySchema": [
          {
            "AttributeName": "Product",
            "KeyType": "HASH"
          },
          {
            "AttributeName": "ApplicationPageUrl",
            "KeyType": "RANGE"
          }
        ],
        "AttributeDefinitions": [
          {
            "AttributeName": "Product",
            "AttributeType": "S"
          },
          {
            "AttributeName": "ApplicationPageUrl",
            "AttributeType": "S"
          }
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "SSESpecification": {
          "SSEEnabled": false
        },
        "TableClass": "STANDARD",
        "TableName": "ExampleTable"
      },
      "UpdateReplacePolicy": "Retain",
      "DeletionPolicy": "Retain",
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ExampleTable/Resource"
      }
    },
    "ConfigTestLambdasServiceRole7580D4DC": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "lambda.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestLambdas/ServiceRole/Resource"
      }
    },
    "ConfigTestLambdasServiceRoleDefaultPolicyDE4695D2": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "dynamodb:BatchGetItem",
                "dynamodb:GetRecords",
                "dynamodb:GetShardIterator",
                "dynamodb:Query",
                "dynamodb:GetItem",
                "dynamodb:Scan",
                "dynamodb:ConditionCheckItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
                "dynamodb:DescribeTable"
              ],
              "Effect": "Allow",
              "Resource": [
                {
                  "Fn::GetAtt": [
                    "ExampleTable114D508F",
                    "Arn"
                  ]
                },
                {
                  "Ref": "AWS::NoValue"
                }
              ]
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ConfigTestLambdasServiceRoleDefaultPolicyDE4695D2",
        "Roles": [
          {
            "Ref": "ConfigTestLambdasServiceRole7580D4DC"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestLambdas/ServiceRole/DefaultPolicy/Resource"
      }
    },
    "ConfigTestLambdas0DB5C960": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "ImageUri": {
            "Fn::Sub": "${AWS::AccountId}.dkr.ecr.${AWS::Region}.${AWS::URLSuffix}/cdk-hnb659fds-container-assets-${AWS::AccountId}-${AWS::Region}:6517d41966aa6a387153196dda2b8d0eb70b067f0f155a6368cdbc3868dbe3b3"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "ConfigTestLambdasServiceRole7580D4DC",
            "Arn"
          ]
        },
        "Description": ".Net 6 Lambda to test reading config values",
        "Environment": {
          "Variables": {
            "Example__Setting3": "Dev environment value",
            "Example__Array__0": "a",
            "Example__Array__1": "b",
            "Example__Array__2": "c",
            "Example__Setting2": "From CDK"
          }
        },
        "PackageType": "Image"
      },
      "DependsOn": [
        "ConfigTestLambdasServiceRoleDefaultPolicyDE4695D2",
        "ConfigTestLambdasServiceRole7580D4DC"
      ],
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestLambdas/Resource",
        "aws:asset:path": "asset.6517d41966aa6a387153196dda2b8d0eb70b067f0f155a6368cdbc3868dbe3b3",
        "aws:asset:dockerfile-path": "Dockerfile",
        "aws:asset:property": "Code.ImageUri"
      }
    },
    "ConfigTestApiGateway6E77D5FA": {
      "Type": "AWS::ApiGateway::RestApi",
      "Properties": {
        "Name": "ConfigTestApiGateway"
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Resource"
      }
    },
    "ConfigTestApiGatewayCloudWatchRoleC9E79807": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "apigateway.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "ManagedPolicyArns": [
          {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs"
              ]
            ]
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/CloudWatchRole/Resource"
      }
    },
    "ConfigTestApiGatewayAccountB35CAEDD": {
      "Type": "AWS::ApiGateway::Account",
      "Properties": {
        "CloudWatchRoleArn": {
          "Fn::GetAtt": [
            "ConfigTestApiGatewayCloudWatchRoleC9E79807",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ConfigTestApiGateway6E77D5FA"
      ],
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Account"
      }
    },
    "ConfigTestApiGatewayDeploymentFEE4044219b6311194735440c0c3d72e0606816c": {
      "Type": "AWS::ApiGateway::Deployment",
      "Properties": {
        "RestApiId": {
          "Ref": "ConfigTestApiGateway6E77D5FA"
        },
        "Description": "Automatically created by the RestApi construct"
      },
      "DependsOn": [
        "ConfigTestApiGatewayproxyANYEFB79DB4",
        "ConfigTestApiGatewayproxy1C3CBF4E",
        "ConfigTestApiGatewayANY42C550FE"
      ],
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Deployment/Resource"
      }
    },
    "ConfigTestApiGatewayDeploymentStageprod4E28EDC1": {
      "Type": "AWS::ApiGateway::Stage",
      "Properties": {
        "RestApiId": {
          "Ref": "ConfigTestApiGateway6E77D5FA"
        },
        "DeploymentId": {
          "Ref": "ConfigTestApiGatewayDeploymentFEE4044219b6311194735440c0c3d72e0606816c"
        },
        "StageName": "prod"
      },
      "DependsOn": [
        "ConfigTestApiGatewayAccountB35CAEDD"
      ],
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/DeploymentStage.prod/Resource"
      }
    },
    "ConfigTestApiGatewayproxy1C3CBF4E": {
      "Type": "AWS::ApiGateway::Resource",
      "Properties": {
        "ParentId": {
          "Fn::GetAtt": [
            "ConfigTestApiGateway6E77D5FA",
            "RootResourceId"
          ]
        },
        "PathPart": "{proxy+}",
        "RestApiId": {
          "Ref": "ConfigTestApiGateway6E77D5FA"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Default/{proxy+}/Resource"
      }
    },
    "ConfigTestApiGatewayproxyANYApiPermissionConfigTestStackConfigTestApiGateway069F4003ANYproxyD8875AAA": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigTestLambdas0DB5C960",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ConfigTestApiGateway6E77D5FA"
              },
              "/",
              {
                "Ref": "ConfigTestApiGatewayDeploymentStageprod4E28EDC1"
              },
              "/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Default/{proxy+}/ANY/ApiPermission.ConfigTestStackConfigTestApiGateway069F4003.ANY..{proxy+}"
      }
    },
    "ConfigTestApiGatewayproxyANYApiPermissionTestConfigTestStackConfigTestApiGateway069F4003ANYproxyA0692C79": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigTestLambdas0DB5C960",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ConfigTestApiGateway6E77D5FA"
              },
              "/test-invoke-stage/*/*"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Default/{proxy+}/ANY/ApiPermission.Test.ConfigTestStackConfigTestApiGateway069F4003.ANY..{proxy+}"
      }
    },
    "ConfigTestApiGatewayproxyANYEFB79DB4": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Ref": "ConfigTestApiGatewayproxy1C3CBF4E"
        },
        "RestApiId": {
          "Ref": "ConfigTestApiGateway6E77D5FA"
        },
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ConfigTestLambdas0DB5C960",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Default/{proxy+}/ANY/Resource"
      }
    },
    "ConfigTestApiGatewayANYApiPermissionConfigTestStackConfigTestApiGateway069F4003ANYD5BEF252": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigTestLambdas0DB5C960",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ConfigTestApiGateway6E77D5FA"
              },
              "/",
              {
                "Ref": "ConfigTestApiGatewayDeploymentStageprod4E28EDC1"
              },
              "/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Default/ANY/ApiPermission.ConfigTestStackConfigTestApiGateway069F4003.ANY.."
      }
    },
    "ConfigTestApiGatewayANYApiPermissionTestConfigTestStackConfigTestApiGateway069F4003ANY3449D1E7": {
      "Type": "AWS::Lambda::Permission",
      "Properties": {
        "Action": "lambda:InvokeFunction",
        "FunctionName": {
          "Fn::GetAtt": [
            "ConfigTestLambdas0DB5C960",
            "Arn"
          ]
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":execute-api:",
              {
                "Ref": "AWS::Region"
              },
              ":",
              {
                "Ref": "AWS::AccountId"
              },
              ":",
              {
                "Ref": "ConfigTestApiGateway6E77D5FA"
              },
              "/test-invoke-stage/*/"
            ]
          ]
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Default/ANY/ApiPermission.Test.ConfigTestStackConfigTestApiGateway069F4003.ANY.."
      }
    },
    "ConfigTestApiGatewayANY42C550FE": {
      "Type": "AWS::ApiGateway::Method",
      "Properties": {
        "HttpMethod": "ANY",
        "ResourceId": {
          "Fn::GetAtt": [
            "ConfigTestApiGateway6E77D5FA",
            "RootResourceId"
          ]
        },
        "RestApiId": {
          "Ref": "ConfigTestApiGateway6E77D5FA"
        },
        "ApiKeyRequired": true,
        "AuthorizationType": "NONE",
        "Integration": {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": {
            "Fn::Join": [
              "",
              [
                "arn:",
                {
                  "Ref": "AWS::Partition"
                },
                ":apigateway:",
                {
                  "Ref": "AWS::Region"
                },
                ":lambda:path/2015-03-31/functions/",
                {
                  "Fn::GetAtt": [
                    "ConfigTestLambdas0DB5C960",
                    "Arn"
                  ]
                },
                "/invocations"
              ]
            ]
          }
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/Default/ANY/Resource"
      }
    },
    "ConfigTestApiGatewayConfigTestUsagePlan766652A5": {
      "Type": "AWS::ApiGateway::UsagePlan",
      "Properties": {
        "ApiStages": [
          {
            "ApiId": {
              "Ref": "ConfigTestApiGateway6E77D5FA"
            },
            "Stage": {
              "Ref": "ConfigTestApiGatewayDeploymentStageprod4E28EDC1"
            },
            "Throttle": {}
          }
        ],
        "Quota": {
          "Limit": 5000,
          "Period": "MONTH"
        },
        "Throttle": {
          "BurstLimit": 200,
          "RateLimit": 100
        },
        "UsagePlanName": "ConfigTestUsagePlan"
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/ConfigTestUsagePlan/Resource"
      }
    },
    "ConfigTestApiGatewayConfigTestUsagePlanUsagePlanKeyResourceConfigTestStackConfigTestApiGatewayConfigTestApiKeyB12263E6CCCF315A": {
      "Type": "AWS::ApiGateway::UsagePlanKey",
      "Properties": {
        "KeyId": {
          "Ref": "ConfigTestApiGatewayConfigTestApiKeyABBB09B6"
        },
        "KeyType": "API_KEY",
        "UsagePlanId": {
          "Ref": "ConfigTestApiGatewayConfigTestUsagePlan766652A5"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/ConfigTestUsagePlan/UsagePlanKeyResource:ConfigTestStackConfigTestApiGatewayConfigTestApiKeyB12263E6"
      }
    },
    "ConfigTestApiGatewayConfigTestApiKeyABBB09B6": {
      "Type": "AWS::ApiGateway::ApiKey",
      "Properties": {
        "Enabled": true,
        "StageKeys": [
          {
            "RestApiId": {
              "Ref": "ConfigTestApiGateway6E77D5FA"
            },
            "StageName": {
              "Ref": "ConfigTestApiGatewayDeploymentStageprod4E28EDC1"
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/ConfigTestApiKey/Resource"
      }
    },
    "ConfigTestApiGatewayEventsRole2D4B76A1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "events.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        }
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/EventsRole/Resource"
      }
    },
    "ConfigTestApiGatewayEventsRoleDefaultPolicy5AA1C5DA": {
      "Type": "AWS::IAM::Policy",
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": [
                "execute-api:Invoke",
                "execute-api:ManageConnections"
              ],
              "Effect": "Allow",
              "Resource": {
                "Fn::Join": [
                  "",
                  [
                    "arn:",
                    {
                      "Ref": "AWS::Partition"
                    },
                    ":execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ConfigTestApiGateway6E77D5FA"
                    },
                    "/",
                    {
                      "Ref": "ConfigTestApiGatewayDeploymentStageprod4E28EDC1"
                    },
                    "/GET/api/Values"
                  ]
                ]
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "PolicyName": "ConfigTestApiGatewayEventsRoleDefaultPolicy5AA1C5DA",
        "Roles": [
          {
            "Ref": "ConfigTestApiGatewayEventsRole2D4B76A1"
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestApiGateway/EventsRole/DefaultPolicy/Resource"
      }
    },
    "ConfigTestEvent49B65EF9": {
      "Type": "AWS::Events::Rule",
      "Properties": {
        "ScheduleExpression": "rate(12 hours)",
        "State": "ENABLED",
        "Targets": [
          {
            "Arn": {
              "Fn::Join": [
                "",
                [
                  "arn:",
                  {
                    "Ref": "AWS::Partition"
                  },
                  ":execute-api:",
                  {
                    "Ref": "AWS::Region"
                  },
                  ":",
                  {
                    "Ref": "AWS::AccountId"
                  },
                  ":",
                  {
                    "Ref": "ConfigTestApiGateway6E77D5FA"
                  },
                  "/",
                  {
                    "Ref": "ConfigTestApiGatewayDeploymentStageprod4E28EDC1"
                  },
                  "/GET/api/Values"
                ]
              ]
            },
            "HttpParameters": {},
            "Id": "Target0",
            "RoleArn": {
              "Fn::GetAtt": [
                "ConfigTestApiGatewayEventsRole2D4B76A1",
                "Arn"
              ]
            }
          }
        ]
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/ConfigTestEvent/Resource"
      }
    },
    "CDKMetadata": {
      "Type": "AWS::CDK::Metadata",
      "Properties": {
        "Analytics": "v2:deflate64:H4sIAAAAAAAA/22RwU7DMAyGn2X3NNuY4MahbCAhYFRlcEVZakpYE0dJulFVfXecdMCQUA/+/DtxfrtnfH7OZxNx8Jmsdlmjtrx/CkLuGEmvfdUZobEicSO2DbDlm0kwsEbobSV4v0K5A3erRQ03rZFBoYmnTrkAp5X3lA1MCc37EsdWKRbYKNmlc4kGBtK9Cu8heH7SPY9KrPESLHoV0HVXwgMTVtUiwEF0vL9PrkrwIbcqPfGLuZTYmsBWYBvsNBCSepLR3HXyNQJdxdZJSI8UDj+7b+XYeOQHCO9YRelIz55uF41Is/+f3EHHyFUM0VgimntPLjytpz2uh+Iw/PhgaQPRmzJ1rD+2wbbhjxniJZpKhbTsFYY1hOkFn/HFlK+vN0t0kFubvYCLv+Nyv+Dz6ZzK9E0+vFKZow0pDbwc4xfixH24HwIAAA=="
      },
      "Metadata": {
        "aws:cdk:path": "ConfigTestStack/CDKMetadata/Default"
      },
      "Condition": "CDKMetadataAvailable"
    }
  },
  "Outputs": {
    "ConfigTestApiGatewayEndpoint660D0611": {
      "Value": {
        "Fn::Join": [
          "",
          [
            "https://",
            {
              "Ref": "ConfigTestApiGateway6E77D5FA"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/",
            {
              "Ref": "ConfigTestApiGatewayDeploymentStageprod4E28EDC1"
            },
            "/"
          ]
        ]
      }
    }
  },
  "Conditions": {
    "CDKMetadataAvailable": {
      "Fn::Or": [
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "af-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-northeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ap-southeast-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "ca-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "cn-northwest-1"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-central-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-north-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-2"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "eu-west-3"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "me-south-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "sa-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-east-2"
              ]
            }
          ]
        },
        {
          "Fn::Or": [
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-1"
              ]
            },
            {
              "Fn::Equals": [
                {
                  "Ref": "AWS::Region"
                },
                "us-west-2"
              ]
            }
          ]
        }
      ]
    }
  },
  "Parameters": {
    "BootstrapVersion": {
      "Type": "AWS::SSM::Parameter::Value<String>",
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
    }
  },
  "Rules": {
    "CheckBootstrapVersion": {
      "Assertions": [
        {
          "Assert": {
            "Fn::Not": [
              {
                "Fn::Contains": [
                  [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5"
                  ],
                  {
                    "Ref": "BootstrapVersion"
                  }
                ]
              }
            ]
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
        }
      ]
    }
  }
}